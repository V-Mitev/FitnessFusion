@model AllExercisesQueryModel
@inject ITrainerService TrainerService;
@{
    var isUserTrainer = await TrainerService.IsUserTrainerAsync(User.GetId());

    ViewBag.Title = "All Exercises";
}
<h2 class="text-center">@ViewBag.Title</h2>
<hr />
<form method="get">
    <div class="row text-center mb-3">
        <div class="form-group col-md-4 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="MuscleGroup"></label>
                <select asp-for="MuscleGroup" class="form-control">
                    <option value="">All</option>
                    @foreach (var category in Model.MusclesGroups)
                    {
                        <option value="@category">@category</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label asp-for="ExercisesPerPage"></label>
                <select asp-for="ExercisesPerPage" class="form-control">
                    <option value="3">3</option>
                    <option value="6">6</option>
                    <option value="9">9</option>

                </select>
            </div>
        </div>
        <div class="form-group col-md-3">
            <label asp-for="SearchString"></label>
            <input asp-for="SearchString" class="form-control" placeholder="..." autocomplete="off">
        </div>

        <div class="col-md-3">
            <div class="form-group mt-4">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }
    var maxPage = Math.Ceiling((double)Model.TotalExercises /
    Model.ExercisesPerPage);
}
<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" :
string.Empty)"
           asp-controller="Exercise"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.MusclesGroups"
           asp-route-searchTerm="@Model.SearchString"><<</a>
    </div>
    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Exercises.Any();
    }
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
 @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
           asp-controller="Exercise"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.MusclesGroups"
           asp-route-searchTerm="@Model.SearchString">>></a>
    </div>
</div>

@if (!Model.Exercises.Any())
{
    <h2 class="text-center">No exercises found by the given criteria!</h2>
}

<div class="row">
    @foreach (var exercese in Model.Exercises)
    {
        <partial name="_ExercisePartial" model="@exercese" />
    }
</div>

@if (isUserTrainer)
{
    <div class="mt-4">
        <a asp-controller="Exercise" asp-action="Add" class="btn btn-primary">Add new exercise</a>
    </div>
}